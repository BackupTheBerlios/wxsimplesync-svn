/////////////////////////////////////////////////////////////////////////////
// Name:        simplesyncdlg.h
// Purpose:
// Author:      Pascal Schnurr aka BoscoWitch
// Modified by:
// Created:     24.6.2007 05:20:26
// RCS-ID:
// Copyright: (c) 2007 by Pascal Schnurr aka BoscoWitch
// Licence:
/*   This file is part of wxSimpleSync.

    wxSimpleSync is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    wxSimpleSync is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
*//////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), 24.6.2007 05:20:26

#ifndef _SIMPLESYNCDLG_H_
#define _SIMPLESYNCDLG_H_

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma interface "simplesyncdlg.h"
#endif

/*!
 * Includes
 */

////@begin includes
#include "wx/frame.h"
#include "wx/statusbr.h"
#include "wx/toolbar.h"
#include "wx/listctrl.h"
////@end includes

#ifndef CSYNC
#define CSYNC
#include "../csync.h"
#else
class CFolderSyncer;
#endif

#include "simplesync.h"
#include "profiledlg.h"
#include "snycentrydlg.h"
#include "settingsdlg.h"
#include "foldercomparedlg.h"


/*!
 * Forward declarations
 */

////@begin forward declarations
class wxStatusBar;
class wxListCtrl;
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_SIMPLESYNCDLG 10000
#define ID_MENUITEM_NEW_PROFILE 10002
#define ID_MENUITEM_EDIT_PROFILE 10014
#define ID_MENUITEM_OPEN_PROFILE 10015
#define ID_MENUITEM_SAVE_PROFILE 10016
#define ID_MENUITEM_SAVE_PROFILE_AS 10017
#define ID_MENUITEM_SETTINGS 10019
#define ID_MENUITEM_EXIT 10020
#define ID_MENUITEM_ADD_SYNC_ENTRY 10001
#define ID_MENUITEM 10053
#define ID_MENUITEM_START_SYNC 10011
#define ID_MENUITEM_SYNC_SELECTED 10037
#define ID_MENUITEM_CANCEL_SYNC 10012
#define ID_MENUITEM_AKTIVATE_AUTOSYNC 10013
#define ID_MENUITEM_DEAKTIVATE_AUTOSYNC 10018
#define ID_MENUITEM_COMPARE_FOLDERS 10059
#define ID_MENUITEM12 10021
#define ID_STATUSBAR1 10003
#define ID_TOOLBAR1 10004
#define ID_TOOL_ADD 10006
#define ID_TOOL_REMOVE 10007
#define ID_TOOL_MOVE_UP 10008
#define ID_TOOL_MOVE_DOWN 10009
#define ID_TOOL_SYNC_ALL 10010
#define ID_TOOL_ABORT_SYNC 10033
#define ID_SYNC_LISTCTRL 10005
#define SYMBOL_SIMPLESYNCDLG_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxMINIMIZE_BOX|wxMAXIMIZE_BOX|wxCLOSE_BOX
#define SYMBOL_SIMPLESYNCDLG_TITLE _("wxSimpleSync")
#define SYMBOL_SIMPLESYNCDLG_IDNAME ID_SIMPLESYNCDLG
#define SYMBOL_SIMPLESYNCDLG_SIZE wxSize(450, 349)
#define SYMBOL_SIMPLESYNCDLG_POSITION wxDefaultPosition
////@end control identifiers


#include "wx/taskbar.h"



class COwnTaskBar;


/*!
 * SimpleSyncDlg class declaration
 */

class SimpleSyncDlg: public wxFrame
{
    DECLARE_CLASS( SimpleSyncDlg )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    SimpleSyncDlg();
    SimpleSyncDlg( wxWindow* parent, wxWindowID id = SYMBOL_SIMPLESYNCDLG_IDNAME, wxString ShellProfile = wxT(""), const wxString& caption = SYMBOL_SIMPLESYNCDLG_TITLE, const wxPoint& pos = SYMBOL_SIMPLESYNCDLG_POSITION, const wxSize& size = SYMBOL_SIMPLESYNCDLG_SIZE, long style = SYMBOL_SIMPLESYNCDLG_STYLE );

    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_SIMPLESYNCDLG_IDNAME, const wxString& caption = SYMBOL_SIMPLESYNCDLG_TITLE, const wxPoint& pos = SYMBOL_SIMPLESYNCDLG_POSITION, const wxSize& size = SYMBOL_SIMPLESYNCDLG_SIZE, long style = SYMBOL_SIMPLESYNCDLG_STYLE );

    /// Destructor
    ~SimpleSyncDlg();

    /// Initialises member variables
    void Init();

    /// Creates the controls and sizers
    void CreateControls();

    bool first;
    int second;

    CFolderSyncer * Sync;
    CLogging * logger;
    unsigned long SelectedItem;
    wxMenuBar* Menu;

    COwnTaskBar * Tray;

////@begin SimpleSyncDlg event handler declarations

    /// wxEVT_CLOSE_WINDOW event handler for ID_SIMPLESYNCDLG
    void OnCloseWindow( wxCloseEvent& event );

    /// wxEVT_ICONIZE event handler for ID_SIMPLESYNCDLG
    void OnIconize( wxIconizeEvent& event );

    /// wxEVT_MAXIMIZE event handler for ID_SIMPLESYNCDLG
    void OnMaximize( wxMaximizeEvent& event );

    /// wxEVT_SIZE event handler for ID_SIMPLESYNCDLG
    void OnSize( wxSizeEvent& event );

    /// wxEVT_PAINT event handler for ID_SIMPLESYNCDLG
    void OnPaint( wxPaintEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_NEW_PROFILE
    void OnMenuitemNewProfileClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_EDIT_PROFILE
    void OnMenuEditProfileClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_OPEN_PROFILE
    void OnMenuitemOpenProfileClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_SAVE_PROFILE
    void OnMenuitemSaveProfileClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_SAVE_PROFILE_AS
    void OnMenuitemSaveProfileAsClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_SETTINGS
    void OnMenuitemSettingsClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_EXIT
    void OnMenuitemExitClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_ADD_SYNC_ENTRY
    void OnMenuitemAddSyncEntryClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM
    void OnMenuEditEntryClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_START_SYNC
    void OnMenuitemStartSyncClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_SYNC_SELECTED
    void OnMenuitemSyncSelectedClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_CANCEL_SYNC
    void OnMenuitemCancelSyncClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_AKTIVATE_AUTOSYNC
    void OnMenuitemAktivateAutosyncClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_DEAKTIVATE_AUTOSYNC
    void OnMenuitemDeaktivateAutosyncClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM_COMPARE_FOLDERS
    void OnMenuitemCompareFoldersClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUITEM12
    void OnMenuInfo12Click( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_TOOL_ADD
    void OnToolAddClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_TOOL_REMOVE
    void OnToolRemoveClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_TOOL_MOVE_UP
    void OnToolMoveUpClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_TOOL_MOVE_DOWN
    void OnToolMoveDownClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_TOOL_SYNC_ALL
    void OnToolSyncAllClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_TOOL_ABORT_SYNC
    void OnToolAbortSyncClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_LIST_ITEM_SELECTED event handler for ID_SYNC_LISTCTRL
    void OnSyncListctrlSelected( wxListEvent& event );

    /// wxEVT_COMMAND_LIST_ITEM_ACTIVATED event handler for ID_SYNC_LISTCTRL
    void OnLeftDClick( wxListEvent& event );

////@end SimpleSyncDlg event handler declarations

////@begin SimpleSyncDlg member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end SimpleSyncDlg member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin SimpleSyncDlg member variables
    wxStatusBar* m_StatusBar;
    wxToolBar* m_Toolbar;
    wxListCtrl* m_ListCtrl;
////@end SimpleSyncDlg member variables

    bool ShellProfileParameter;
    wxString ShellProfilePath;
};

class COwnTaskBar : wxTaskBarIcon
{
public:
    COwnTaskBar() {
        inTaskBar = false;
    };

    ~COwnTaskBar() {
        RemoveIcon();
    }

    void SetWindow( SimpleSyncDlg* mWin) {
        MainWindow = mWin;
    };

    void OnTaskIconDClick(wxTaskBarIconEvent &event);

    void MinimizeInTaskBar();


private:
    bool inTaskBar;
    SimpleSyncDlg* MainWindow;

    DECLARE_DYNAMIC_CLASS( COwnTaskBar )
    DECLARE_EVENT_TABLE()
};

#endif
    // _SIMPLESYNCDLG_H_
